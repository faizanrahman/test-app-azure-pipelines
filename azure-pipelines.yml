# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-latest

steps:
- script: echo Hello, world! - Name of branch $(Build.SourceBranchName)
  displayName: 'Run a one-line script'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    arguments: '--configuration Release --output $(System.DefaultWorkingDirectory)/TestFunctionApp/FunctionApp1/bin/publish_output'
    modifyOutputPath: false
    zipAfterPublish: false
    projects: '**/*.csproj'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |      
      Write-Host 'Working Directoy: $(System.DefaultWorkingDirectory)'
      ls $(System.DefaultWorkingDirectory)
      ls $(System.DefaultWorkingDirectory)/TestFunctionApp
      ls $(System.DefaultWorkingDirectory)/TestFunctionApp/FunctionApp1
      ls $(System.DefaultWorkingDirectory)/TestFunctionApp/FunctionApp1/bin

      Write-Host $(Build.BuildId)
      Write-Host $(Build.BuildNumber)

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/TestFunctionApp/FunctionApp1/bin/publish_output'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |      
      Write-Host 'Working Directoy: $(Build.ArtifactStagingDirectory)
      ls '$(Build.ArtifactStagingDirectory)
      ls '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    ArtifactName: 'drop'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |      
      Write-Host "Hello World"
      ls $(Build.ArtifactStagingDirectory)

- task: AzureFunctionApp@1
  inputs:
    azureSubsciption: "RAW-S2-CTUS-DEV"
    appType: 'functionApp'
    appName: 'xyz'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
    appSettings: '-Port 5000 -RequestTimeout 5000'
    configurationStrings: '-phpVersion 5.6'
    deploymentMethod: 'zipDeploy'